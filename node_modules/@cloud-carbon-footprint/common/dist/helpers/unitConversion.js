"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertGramsToMetricTons = exports.convertGigaBytesToTerabyteHours = exports.convertMegabytesToGigabytes = exports.convertTerabytesToGigabytes = exports.convertGigabyteMonthsToTerabyteHours = exports.convertGigabyteHoursToTerabyteHours = exports.convertBytesToTerabytes = exports.convertByteSecondsToGigabyteHours = exports.convertBytesToGigabytes = exports.convertByteSecondsToTerabyteHours = void 0;
const moment_1 = __importDefault(require("moment"));
const convertByteSecondsToTerabyteHours = (usageAmount) => {
    return usageAmount / 1099511627776 / 3600;
};
exports.convertByteSecondsToTerabyteHours = convertByteSecondsToTerabyteHours;
const convertBytesToGigabytes = (usageAmount) => {
    return usageAmount / 1073741824;
};
exports.convertBytesToGigabytes = convertBytesToGigabytes;
const convertByteSecondsToGigabyteHours = (usageAmount) => {
    return usageAmount / 1073741824 / 3600;
};
exports.convertByteSecondsToGigabyteHours = convertByteSecondsToGigabyteHours;
const convertBytesToTerabytes = (usageAmount) => {
    return usageAmount / 1099511627776;
};
exports.convertBytesToTerabytes = convertBytesToTerabytes;
const convertGigabyteHoursToTerabyteHours = (usageAmount) => {
    return usageAmount / 1000;
};
exports.convertGigabyteHoursToTerabyteHours = convertGigabyteHoursToTerabyteHours;
const convertGigabyteMonthsToTerabyteHours = (usageAmount, timestamp) => {
    const daysInMonth = (0, moment_1.default)(timestamp).isValid()
        ? (0, moment_1.default)(timestamp).utc().daysInMonth()
        : 30.42;
    return (usageAmount / 1000) * (24 * daysInMonth);
};
exports.convertGigabyteMonthsToTerabyteHours = convertGigabyteMonthsToTerabyteHours;
const convertTerabytesToGigabytes = (usageAmount) => {
    return usageAmount * 1000;
};
exports.convertTerabytesToGigabytes = convertTerabytesToGigabytes;
const convertMegabytesToGigabytes = (usageAmount) => {
    return usageAmount / 1024;
};
exports.convertMegabytesToGigabytes = convertMegabytesToGigabytes;
const convertGigaBytesToTerabyteHours = (usageAmount) => {
    return (usageAmount / 1000) * 24;
};
exports.convertGigaBytesToTerabyteHours = convertGigaBytesToTerabyteHours;
const convertGramsToMetricTons = (amount) => {
    return amount / 1000000;
};
exports.convertGramsToMetricTons = convertGramsToMetricTons;
//# sourceMappingURL=unitConversion.js.map