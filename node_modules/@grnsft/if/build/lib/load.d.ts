import { Parameters } from '../types/parameters';
/**
 * Parses manifest file as an object. Checks if parameter file is passed via CLI, then loads it too.
 * Returns context, tree and parameters (either the default one, or from CLI).
 */
export declare const load: (inputPath: string, paramPath?: string) => Promise<{
    tree: Record<string, any>;
    context: {
        name: string;
        initialize: {
            plugins: Record<string, {
                path: string;
                method: string;
                'global-config'?: Record<string, any> | undefined;
            }>;
            outputs?: string[] | undefined;
        };
        description?: string | null | undefined;
        tags?: {
            kind?: string | null | undefined;
            complexity?: string | null | undefined;
            category?: string | null | undefined;
        } | null | undefined;
        aggregation?: {
            type: "horizontal" | "vertical" | "both";
            metrics: string[];
        } | null | undefined;
        params?: {
            name: string;
            description: string;
            aggregation: "sum" | "none" | "avg";
            unit: string;
        }[] | null | undefined;
        'if-version'?: string | null | undefined;
    };
    parameters: Parameters;
}>;
