"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = void 0;
const winston = __importStar(require("winston"));
const { combine, timestamp, printf, colorize, align } = winston.format;
/**
 * Winston logger instance.
 */
exports.logger = winston.createLogger({
    format: combine(colorize({ all: true }), timestamp({
        format: 'YYYY-MM-DD hh:mm:ss.SSS A',
    }), align(), printf((info) => `[${info.timestamp}] ${info.level}: ${info.message}
${info.stack || ''}`)),
    transports: [new winston.transports.Console()],
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvbG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaURBQW1DO0FBRW5DLE1BQU0sRUFBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUVyRTs7R0FFRztBQUNVLFFBQUEsTUFBTSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7SUFDekMsTUFBTSxFQUFFLE9BQU8sQ0FDYixRQUFRLENBQUMsRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFDLENBQUMsRUFDckIsU0FBUyxDQUFDO1FBQ1IsTUFBTSxFQUFFLDJCQUEyQjtLQUNwQyxDQUFDLEVBQ0YsS0FBSyxFQUFFLEVBQ1AsTUFBTSxDQUNKLENBQUMsSUFBUyxFQUFFLEVBQUUsQ0FDWixJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSSxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsT0FBTztFQUN4RCxJQUFJLENBQUMsS0FBSyxJQUFJLEVBQUUsRUFBRSxDQUNmLENBQ0Y7SUFDRCxVQUFVLEVBQUUsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7Q0FDL0MsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgd2luc3RvbiBmcm9tICd3aW5zdG9uJztcblxuY29uc3Qge2NvbWJpbmUsIHRpbWVzdGFtcCwgcHJpbnRmLCBjb2xvcml6ZSwgYWxpZ259ID0gd2luc3Rvbi5mb3JtYXQ7XG5cbi8qKlxuICogV2luc3RvbiBsb2dnZXIgaW5zdGFuY2UuXG4gKi9cbmV4cG9ydCBjb25zdCBsb2dnZXIgPSB3aW5zdG9uLmNyZWF0ZUxvZ2dlcih7XG4gIGZvcm1hdDogY29tYmluZShcbiAgICBjb2xvcml6ZSh7YWxsOiB0cnVlfSksXG4gICAgdGltZXN0YW1wKHtcbiAgICAgIGZvcm1hdDogJ1lZWVktTU0tREQgaGg6bW06c3MuU1NTIEEnLFxuICAgIH0pLFxuICAgIGFsaWduKCksXG4gICAgcHJpbnRmKFxuICAgICAgKGluZm86IGFueSkgPT5cbiAgICAgICAgYFske2luZm8udGltZXN0YW1wfV0gJHtpbmZvLmxldmVsfTogJHtpbmZvLm1lc3NhZ2V9XG4ke2luZm8uc3RhY2sgfHwgJyd9YFxuICAgIClcbiAgKSxcbiAgdHJhbnNwb3J0czogW25ldyB3aW5zdG9uLnRyYW5zcG9ydHMuQ29uc29sZSgpXSxcbn0pO1xuIl19