"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommonGenerator = void 0;
const errors_1 = require("../../../util/errors");
const helpers_1 = require("../../../util/helpers");
const { InputValidationError } = errors_1.ERRORS;
const CommonGenerator = (config) => {
    const errorBuilder = (0, helpers_1.buildErrorMessage)(exports.CommonGenerator.name);
    /**
     * Creates new copy of the given `object`.
     */
    const copyObject = (object) => ({ ...object });
    /**
     * Validates the provided config is not null or empty.
     * returns a copy of the validated config, otherwise throws an InputValidationError.
     */
    const validateConfig = (config) => {
        if (!config || Object.keys(config).length === 0) {
            throw new InputValidationError(errorBuilder({ message: 'Config must not be null or empty' }));
        }
        return copyObject(config);
    };
    /**
     * Generates next value by copying the validated config.
     */
    const next = (_historical) => copyObject(validateConfig(config));
    return {
        next,
    };
};
exports.CommonGenerator = CommonGenerator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLWdlbmVyYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvbW9jay1vYnNlcnZhdGlvbnMvaGVscGVycy9jb21tb24tZ2VuZXJhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGlEQUE0QztBQUM1QyxtREFBd0Q7QUFJeEQsTUFBTSxFQUFDLG9CQUFvQixFQUFDLEdBQUcsZUFBTSxDQUFDO0FBRS9CLE1BQU0sZUFBZSxHQUFHLENBQUMsTUFBb0IsRUFBYSxFQUFFO0lBQ2pFLE1BQU0sWUFBWSxHQUFHLElBQUEsMkJBQWlCLEVBQUMsdUJBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUU3RDs7T0FFRztJQUNILE1BQU0sVUFBVSxHQUFHLENBQUksTUFBUyxFQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsR0FBRyxNQUFNLEVBQUMsQ0FBQyxDQUFDO0lBRXREOzs7T0FHRztJQUNILE1BQU0sY0FBYyxHQUFHLENBQUMsTUFBYyxFQUFFLEVBQUU7UUFDeEMsSUFBSSxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUNoRCxNQUFNLElBQUksb0JBQW9CLENBQzVCLFlBQVksQ0FBQyxFQUFDLE9BQU8sRUFBRSxrQ0FBa0MsRUFBQyxDQUFDLENBQzVELENBQUM7UUFDSixDQUFDO1FBRUQsT0FBTyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDNUIsQ0FBQyxDQUFDO0lBRUY7O09BRUc7SUFDSCxNQUFNLElBQUksR0FBRyxDQUFDLFdBQWlDLEVBQVUsRUFBRSxDQUN6RCxVQUFVLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFFckMsT0FBTztRQUNMLElBQUk7S0FDTCxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBL0JXLFFBQUEsZUFBZSxtQkErQjFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtLZXlWYWx1ZVBhaXJ9IGZyb20gJy4uLy4uLy4uL3R5cGVzL2NvbW1vbic7XG5pbXBvcnQge0VSUk9SU30gZnJvbSAnLi4vLi4vLi4vdXRpbC9lcnJvcnMnO1xuaW1wb3J0IHtidWlsZEVycm9yTWVzc2FnZX0gZnJvbSAnLi4vLi4vLi4vdXRpbC9oZWxwZXJzJztcblxuaW1wb3J0IHtHZW5lcmF0b3J9IGZyb20gJy4uL2ludGVyZmFjZXMnO1xuXG5jb25zdCB7SW5wdXRWYWxpZGF0aW9uRXJyb3J9ID0gRVJST1JTO1xuXG5leHBvcnQgY29uc3QgQ29tbW9uR2VuZXJhdG9yID0gKGNvbmZpZzogS2V5VmFsdWVQYWlyKTogR2VuZXJhdG9yID0+IHtcbiAgY29uc3QgZXJyb3JCdWlsZGVyID0gYnVpbGRFcnJvck1lc3NhZ2UoQ29tbW9uR2VuZXJhdG9yLm5hbWUpO1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIG5ldyBjb3B5IG9mIHRoZSBnaXZlbiBgb2JqZWN0YC5cbiAgICovXG4gIGNvbnN0IGNvcHlPYmplY3QgPSA8VD4ob2JqZWN0OiBUKTogVCA9PiAoey4uLm9iamVjdH0pO1xuXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhlIHByb3ZpZGVkIGNvbmZpZyBpcyBub3QgbnVsbCBvciBlbXB0eS5cbiAgICogcmV0dXJucyBhIGNvcHkgb2YgdGhlIHZhbGlkYXRlZCBjb25maWcsIG90aGVyd2lzZSB0aHJvd3MgYW4gSW5wdXRWYWxpZGF0aW9uRXJyb3IuXG4gICAqL1xuICBjb25zdCB2YWxpZGF0ZUNvbmZpZyA9IChjb25maWc6IG9iamVjdCkgPT4ge1xuICAgIGlmICghY29uZmlnIHx8IE9iamVjdC5rZXlzKGNvbmZpZykubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgSW5wdXRWYWxpZGF0aW9uRXJyb3IoXG4gICAgICAgIGVycm9yQnVpbGRlcih7bWVzc2FnZTogJ0NvbmZpZyBtdXN0IG5vdCBiZSBudWxsIG9yIGVtcHR5J30pXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBjb3B5T2JqZWN0KGNvbmZpZyk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBuZXh0IHZhbHVlIGJ5IGNvcHlpbmcgdGhlIHZhbGlkYXRlZCBjb25maWcuXG4gICAqL1xuICBjb25zdCBuZXh0ID0gKF9oaXN0b3JpY2FsOiBPYmplY3RbXSB8IHVuZGVmaW5lZCk6IE9iamVjdCA9PlxuICAgIGNvcHlPYmplY3QodmFsaWRhdGVDb25maWcoY29uZmlnKSk7XG5cbiAgcmV0dXJuIHtcbiAgICBuZXh0LFxuICB9O1xufTtcbiJdfQ==